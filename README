# itmpcsync - The iTunes MPD Playcount Synchroniser
itmpcsync is a utility that synchronises the Play Count of songs in an iTunes library, with an MPD music library, through the use of stickers. This is intended to be used in conjunction with a program that can automatically set play count stickers, such as `mpdfavd`.

# Why would I need this?
Chances are, that you don't. This is intended for the very specific set of people who dual-boot Linux and Windows, use Linux more often than Windows, and store all their music both locally on an iPod and on their computer, keep them in sync using iTunes, and who want to use MPD to listen to music on their Linux system. If you don't meet all that criteria, then this software is likely going to be pointless to you.

# How does it work?
The actual executable to run is a script called 'itmpcsync'. A C++ program needs to also be compiled, called `itxmlconvert`, which is used to convert the iTunes XML library from a 'plist' format to a pipe-delimited list that is relatively easy and fast to work with.

# Notes
* Make sure that as much of your music library is properly tagged! This program will only work properly if the tags on all of the songs in the iTunes and MPD libraries match...

* `itxmlconvert` can be compiled to output in JSON if you wish to use it for other purposes. Keep in mind that if you do this, the `itmpcsync` will no longer function. To enable JSON output, add `-DJSON_OUT` to the compiler options in the Makefile, or compile manually with GCC, etc.

* The script produces a 'lib_prev.data' file, which contains the data from the last sync. This will be created under $HOME/.local/share/itmpcsync. Be cautious when handling this file as if it does not exist or gets renamed/moved, all the playcount stickers in your MPD database will likely get doubled up and will be incorrect. Only run the itmpcsync script if you are sure that your path to this file has not changed.

* If you wish to do some safe experimenting with the script, create a backup of your lib_prev.data file, and temporarily comment out the `mpc sticker "$filename" set playcount $plays_total` statement near the end of the script - this will disable setting the stickers in your database.

# How `itmpcsync` script works:
* Script executes `itxmlconvert`, which goes through the iTunes XML library, and converts it to a format that can actually be worked with.
* Checks if a sync has been run before. If it hasn't, we just get the raw playcounts from iTunes and add them to whatever is already in the MPD library.
* If a sync HAS been run before, we find the difference in play counts in the iTunes library, from it's last sync, and add it the the MPD library's play counts.

# `itmpcsync` Dependencies:
* mpc

# `itxmlconvert` Dependencies
* PlistCpp (included in source)
* Boost (because PlistCpp depends on it - included in source)
